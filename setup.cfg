[metadata]
name = paws_bakery
version = 0.1.0

[options]
zip_safe = False
include_package_data = True
packages = find:
package_dir =
  =src

install_requires =

[options.extras_require]
dev =
  bpy ~= 4.4.0
  # fake-bpy-module-latest >= 20250505 # uses python 3.12 syntax =(
  fake-bpy-module-4.1 == 20240604
  mypy >= 0.790
  black >= 20.8b1
  flake8 >= 6.1.0
  flake8-bugbear >= 23.9.16
  flake8-comprehensions >= 3.16.0
  flake8-docstrings >= 1.7.0
  flake8-print >= 5.0.0
  flake8-unused-arguments >= 0.0.13
  pylint[spelling] >= 3.0.3
  isort >= 5.6.4
  pytest >= 6.1.2
  pytest-cov >= 2.10.1
  pytest-mock >= 3.3.1
  # types-python-dateutil >= 2.8.17

; [options.packages.find]
; where = src

[options.package_data]
* = py.typed

[mypy]
check_untyped_defs = True
no_implicit_optional = True
strict = True
pretty = True
plugins =

disallow_any_generics = True
disallow_untyped_calls = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
warn_redundant_casts = True
warn_unused_ignores = true
warn_return_any = True

[isort]
profile = black
src_paths = src,tests
# sort_reexports = true


[flake8]
max-line-length = 88
extend-ignore =
  E203
  E501
  # F722: conflicts with blender attribute type annotations
  F722
  # F821: conflicts with blender attribute type annotations
  # F821
  D402
  U101
  # D105: Missing docstring in magic method
  D105
extend-select = B9
per-file-ignores =
  tests/*: T201,D101

# WARN: require-plugins doesn't throw error in vscode
# require-plugins =
#   flake8-bugbear
#   non-existent-plugin

[pylint]
max-line-length = 88
ignore-paths=
  ^tests/.*$,
generated-member=
  bpy.ops.pawsbkr,
  mathutils.Vector,
disable=
  assignment-from-no-return,
  too-few-public-methods,
  # consider-using-tuple,
good-dunder-names=
  _generate_next_value_,
load-plugins=
  pylint.extensions.broad_try_clause,
  # pylint.extensions.code_style,
  pylint.extensions.comparison_placement,
  pylint.extensions.confusing_elif,
  pylint.extensions.for_any_all,
  pylint.extensions.consider_refactoring_into_while_condition,
  pylint.extensions.consider_ternary_expression,
  pylint.extensions.bad_builtin,
  pylint.extensions.mccabe,
  pylint.extensions.dict_init_mutate,
  pylint.extensions.docstyle,
  pylint.extensions.dunder,
  pylint.extensions.check_elif,
  pylint.extensions.eq_without_hash,
  pylint.extensions.private_import,
  pylint.extensions.magic_value,
  pylint.extensions.redefined_variable_type,
  pylint.extensions.no_self_use,
  pylint.extensions.overlapping_exceptions,
  pylint.extensions.redefined_loop_name,
  pylint.extensions.set_membership,
  pylint.extensions.typing,
  pylint.extensions.while_used,
